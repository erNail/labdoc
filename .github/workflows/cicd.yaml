---
name: "CI/CD"

"on":
  push:

jobs:
  pre-commit-job:
    runs-on: "ubuntu-24.04"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v4.2.2"
      - name: "Setup python"
        uses: "actions/setup-python@v5.6.0"
      - name: "Run pre-commit"
        uses: "pre-commit/action@v3.0.1"

  go-test-job:
    runs-on: "ubuntu-24.04"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v4.2.2"
      - name: "Setup go"
        uses: "actions/setup-go@v5.5.0"
        with:
          go-version: "1.24.5"
      - name: "Run go test"
        run: "go test ./..."

  go-build-job:
    runs-on: "ubuntu-24.04"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v4.2.2"
      - name: "Setup go"
        uses: "actions/setup-go@v5.5.0"
        with:
          go-version: "1.24.5"
      - name: "Run go build"
        run: "go build -o dist/"

  determine-version-job:
    runs-on: "ubuntu-24.04"
    outputs:
      version: "${{ steps.get_version.outputs.version }}"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v4.2.2"
        with:
          fetch-depth: 0
      - name: "Download verscout"
        run: |
          curl -L -o verscout.tar.gz \
            https://github.com/erNail/verscout/releases/download/1.3.0/verscout_1.3.0_linux_amd64.tar.gz
          tar xzf verscout.tar.gz
          chmod +x verscout
      - name: "Run verscout next"
        id: "get_version"
        run: |
          VERSION=$(./verscout next)
          if [ -z "$VERSION" ]; then
            exit 0
          fi
          if [ "${{ github.ref_name }}" != "${{ github.event.repository.default_branch }}" ]; then
            VERSION="${VERSION}-rc"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

  release-job:
    runs-on: "ubuntu-24.04"
    needs:
      - "determine-version-job"
    if: "needs.determine-version-job.outputs.VERSION != ''"
    permissions:
      contents: "write"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v4.2.2"
        with:
          fetch-depth: 0
      - name: "Login to Docker Hub"
        uses: "docker/login-action@v3.4.0"
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_LABDOC_GORELEASER_TOKEN }}"
      - name: "Setup go"
        uses: "actions/setup-go@v5.5.0"
        with:
          go-version: "1.24.5"
      - name: "Setup goreleaser"
        run: "go install github.com/goreleaser/goreleaser/v2@v2.0.0"
      - name: "Generate release notes"
        uses: "orhun/git-cliff-action@v4.5.0"
        with:
          args: "--tag ${{ needs.determine-version-job.outputs.VERSION }} --unreleased --strip header"
        env:
          OUTPUT: "release-notes.md"
      - name: "Create tag"
        run: "git tag ${{ needs.determine-version-job.outputs.VERSION }}"
      - name: "Run goreleaser"
        run: "goreleaser release --release-notes release-notes.md --clean"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          DOCKER_LABDOC_GORELEASER_TOKEN: "${{ secrets.DOCKER_LABDOC_GORELEASER_TOKEN }}"
          HOMEBREW_TAP_ERNAIL_GITHUB_TOKEN: "${{ secrets.HOMEBREW_TAP_ERNAIL_GITHUB_TOKEN }}"
...
