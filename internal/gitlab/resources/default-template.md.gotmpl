# Components Documentation

## Components

{{- range $component := .Components }}

### {{ $component.Name }}

{{ $component.Description }}

#### Usage of component `{{ $component.Name }}`

You can add this component to an existing `.gitlab-ci.yml` file by using the `include:` keyword.

```yaml
include:
  - component: "{{ $.RepoURL }}/{{ $component.Name }}@{{ $.Version }}"
    inputs: {}
```

You can configure the component with the inputs documented below.

#### Inputs of component `{{ $component.Name }}`

| Name | Description | Type | Default | Options | Regex | Mandatory |
|------|-------------|------|---------|---------|-------|-----------|
{{- range $input := $component.Inputs }}
  {{- $mandatoryDisplay := "No" }}
  {{- if eq $input.Default nil }}
    {{- $mandatoryDisplay = "Yes" }}
  {{- end }}

  {{- $defaultDisplay := $input.Default }}
  {{- if eq $input.Default nil }}
    {{- $defaultDisplay = "-" }}
  {{- else if eq $input.Type "string" }}
    {{- if eq $input.Default "" }}
        {{- $defaultDisplay = "\"\"" }}
    {{- end }}
  {{- end }}

  {{- $optionsDisplay := $input.Options }}
  {{- if eq $input.Options nil }}
    {{- $optionsDisplay = "-" }}
  {{- end }}

  {{- $regexDisplay := $input.Regex }}
  {{- if eq $input.Regex "" }}
    {{- $regexDisplay = "-" }}
  {{- end }}

  {{- $typeDisplay := $input.Type}}
  {{- if eq $input.Type "" }}
    {{- $typeDisplay = "-" }}
  {{- end }}
| `{{ $input.Name }}` | {{ $input.Description }} | `{{ $typeDisplay }}` | `{{ $defaultDisplay }}` | `{{ $optionsDisplay }}` | `{{ $regexDisplay }}` | {{ $mandatoryDisplay }} |
{{- end }}

#### Jobs of component `{{ $component.Name }}`

The component will add the following jobs to your CI/CD Pipeline.
{{- range $job := $component.Jobs }}

##### `{{ $job.Name }}`

{{ $job.Comment }}
{{- end }}
{{- end }}
